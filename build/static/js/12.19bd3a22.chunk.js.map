{"version":3,"sources":["components/main/CookieDark.jsx"],"names":["CookieDark","useEffect","document","cookie","querySelector","remove","_jsxs","className","children","_jsx","href","onClick","e","name","value","daysToExpire","expires","concat","Date","now","toUTCString","encodeURIComponent","setCookie","myCookieValue","cookies","split","i","length","trim","cookieName","cookieValue","decodeURIComponent","getCookie","console","log"],"mappings":"mHAAA,gCAmDeA,UA/CIA,KACfC,qBAAU,KACkB,yBAApBC,SAASC,QACTD,SAASE,cAAc,iBAAiBC,QAC5C,GACD,IA2BH,OACIC,eAAA,OAAKC,UAAU,oFAAmFC,SAAA,CAC9FF,eAAA,KAAGC,UAAU,iCAAgCC,SAAA,CAAC,sBAE1CC,cAAA,KAAGF,UAAU,cAAcG,KAAK,yDAAwDF,SAAC,YAAW,2BAGxGC,cAAA,KAAGF,UAAU,0CAA0CI,QAjBzCC,KAJtB,SAAmBC,EAAMC,EAAOC,GAC5B,MAAMC,EAAUD,EAAY,WAAAE,OAAc,IAAIC,KAAKA,KAAKC,MAAuB,MAAfJ,GAAyBK,eAAkB,GAC3GlB,SAASC,OAAM,GAAAc,OAAMJ,EAAI,KAAAI,OAAII,mBAAmBP,GAAM,MAAAG,OAAKD,EAAO,WACtE,CAEIM,CAAU,gBAAiB,SAAU,GACrC,MAAMC,EAlBV,SAAmBV,GACf,MAAMW,EAAUtB,SAASC,OAAOsB,MAAM,KACtC,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAQG,OAAQD,IAAK,CACrC,MAAMvB,EAASqB,EAAQE,GAAGE,QACnBC,EAAYC,GAAe3B,EAAOsB,MAAM,KAC/C,GAAII,IAAehB,EACf,OAAOkB,mBAAmBD,EAElC,CACA,OAAO,IACX,CAQ0BE,CAAU,iBAChCC,QAAQC,IAAIX,GACY,yBAApBrB,SAASC,QACTD,SAASE,cAAc,iBAAiBC,QAC5C,EAWiFG,SAAC,aAG5E,C","file":"static/js/12.19bd3a22.chunk.js","sourcesContent":["import '../../styles/DarkCookie.scss';\r\n\r\nimport { useEffect } from 'react';\r\n\r\nconst CookieDark = () => {\r\n    useEffect(() => {\r\n        if (document.cookie === 'acceptCookies=accept') { \r\n            document.querySelector('.cookie__dark').remove()\r\n        }     \r\n    }, [])\r\n    function getCookie(name) {\r\n        const cookies = document.cookie.split(';');\r\n        for (let i = 0; i < cookies.length; i++) {\r\n            const cookie = cookies[i].trim();\r\n            const [cookieName, cookieValue] = cookie.split('=');\r\n            if (cookieName === name) {\r\n                return decodeURIComponent(cookieValue);\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    function setCookie(name, value, daysToExpire) {\r\n        const expires = daysToExpire ? `expires=${new Date(Date.now() + daysToExpire * 86400000).toUTCString()}` : '';\r\n        document.cookie = `${name}=${encodeURIComponent(value)}; ${expires}; path=/`;\r\n    }\r\n    const acceptCookie = (e) => {\r\n        setCookie('acceptCookies', 'accept', 7);\r\n        const myCookieValue = getCookie('acceptCookies');\r\n        console.log(myCookieValue);\r\n        if (document.cookie === 'acceptCookies=accept') { \r\n            document.querySelector('.cookie__dark').remove()\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className='cookie__dark d-flex align-items-center m-auto justify-content-between flex-nowrap'>\r\n            <p className=\"cookie__dark-info font-caption\">\r\n                We use üç™\r\n                <a className='color-white' href=\"https://policies.google.com/technologies/cookies?hl=ru\">cookies</a>\r\n                for better experience\r\n            </p>\r\n            <p className=\"cookie__accept font-caption color-white\" onClick={acceptCookie}>\r\n                Accept\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default CookieDark"],"sourceRoot":""}